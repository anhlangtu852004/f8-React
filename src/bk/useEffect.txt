APP.js ***************
import './App.css';
// import React from 'react';
import { useState } from 'react';
import Contents from './components/Contents';

const courses = [
  {
    id:1,
    name: 'jva'
  },
  {
    id:2,
    name: 'reduc'
  },
  {
    id:3,
    name: 'php'
  },

]

function App() {
  const [show, setShow] =useState(false)

  const handleShow = () => show ? setShow(false) : setShow(true)
  
  return (
    <div>
      <button onClick={handleShow}>tongle</button>
      {show && <Contents />}

    </div>
  );
}

export default App;
 
 *************************************************
 Contents components

import axios from "axios";
import { useEffect, useState } from "react";


function Contents() {
    const [title, setTitle] = useState('')
    const [posts, setPost] = useState([])

    useEffect(() => {
        axios.get('https://jsonplaceholder.typicode.com/posts')
        .then(res => {
            setPost(res.data);
            // console.log(res.data)
        })
        .catch(error => {console.log(error)} )
    })
    return (  
        <div>
            <h1>hellooo anh em</h1>
            <input 
                type='text' 
                value={title}
                onChange={e => setTitle(e.target.value) }
            />
            <ul>
                {posts.map(post => (
                    <li key={post.id}>{post.title}</li>
                ))}
            </ul>
        </div>

    );
}

export default Contents;
 ********************  end  Contents components   *****************************

*************** start useEffect with dependency *****************
import axios from "axios";
import { useEffect, useState } from "react";

const tabs = ['posts','comments', 'albums' ]

function Contents() {
    const [title, setTitle] = useState('')
    const [posts, setPost] = useState([])
    const [type, setType] = useState('posts')

   
    useEffect(() => {
        axios.get(`https://jsonplaceholder.typicode.com/${type}`)
        .then(res => {
            setPost(res.data);
            // console.log(res.data)
        })
        .catch(error => {console.log(error)} )
    },[type])
    return (  
        <div>
            {tabs.map((tab) =>(
                <button 
                    key={tab}
                    style = {type === tab ? {
                        color: '#222',
                        backgroundColor: '#222'
                    } : {}
                    }
                    onClick={ ()=> setType(tab) }
                >
                    {tab}
                </button>
            ))}
            <h1>hellooo anh em</h1>
            <input 
                type='text' 
                value={title}
                onChange={e => setTitle(e.target.value) }
            />
            <ul>
                {posts.map(post => (
                    <li key={post.id}>{post.title}</li>
                ))}
            </ul>
        </div>

    );
}

export default Contents;
*************** end useEffect with dependency *****************


*************** start timmer ****************
import axios from "axios";
import { useEffect, useRef, useState } from "react";


function Contents() {
    const [timer, setTimer] = useState(180)
    
    
    useEffect( () => {
       const timerId = setInterval( () => {
        setTimer(timer - 1)
       },1000)

       return () => {
        clearInterval(timerId) 
    }
    },[timer]
    
   

    )
    

    return (  
        <div>
            {timer}
        </div>

    );
}

export default Contents;

************end timmer *********************


*******************dom envent*****************
import { useCallback, useEffect, useState } from "react";

const sources = [
    {id:1,name:'java'},
    {id:2,name:'php'},
    {id:3,name:'ract'},
]


function Contents() {
    const [active, setActive] = useState(1);

    useEffect(()=>{
        const handleShow = (e) => {
            console.log(e.detail);
        }
        window.addEventListener(`build-${active}`,handleShow)
        return () => {
            window.removeEventListener(`build-${active}`,handleShow)
        }
    },[active])

    return (  
        <div>
            <ul>
                {sources.map(source => (
                    <li 
                        key={source.id}
                        style={{color: active===source.id?'red':'black' }}
                        onClick = {() => setActive(source.id)}
                    >
                        {source.name}
                    </li>
                ))} 
            </ul>       
        </div>

    );
}

export default Contents;
******************** end dom event****************